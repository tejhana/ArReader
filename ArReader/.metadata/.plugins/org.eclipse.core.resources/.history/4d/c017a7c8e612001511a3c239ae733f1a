package com.clc.arreader.main;

import java.io.IOException;

import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;
import javax.xml.xpath.XPath;
import javax.xml.xpath.XPathConstants;
import javax.xml.xpath.XPathExpression;
import javax.xml.xpath.XPathExpressionException;
import javax.xml.xpath.XPathFactory;

import org.w3c.dom.Document;
import org.xml.sax.SAXException;

import com.clc.arreader.util.UniversalNamespaceCache;

public class ArReaderDriver {

	/**
	 * @param args
	 */
	public static void main(String[] args) {

		        DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();
		        factory.setNamespaceAware(true);
		        DocumentBuilder builder;
		        Document doc = null;
		        try {
		            builder = factory.newDocumentBuilder();
		            doc = builder.parse("sampleXml.xml");
		 
		            // Create XPathFactory object
		            XPathFactory xpathFactory = XPathFactory.newInstance();
		 
		            // Create XPath object
		            XPath xpath = xpathFactory.newXPath();
		            
		            xpath.setNamespaceContext(new UniversalNamespaceCache(doc, false));
		            
		            String iBookId = getIbook(doc, xpath);
		            String vchEan = getVchEan(doc, xpath);		 
		          
		 
		        } catch (ParserConfigurationException | SAXException | IOException e) {
		            e.printStackTrace();
		        }
		 
	}
	
    private static String getIbook(Document doc, XPath xpath) {
        String iBook = null;
        String expression = "//xml/rs:data/z:row/@iBookID";

      
        try {
            XPathExpression expr =
                xpath.compile(expression);
            iBook = (String) expr.evaluate(doc, XPathConstants.STRING);
        } catch (XPathExpressionException e) {
            e.printStackTrace();
        }
        System.out.println("iBookID: " + iBook);
        return iBook;
    }
    
    private static String getVchEan(Document doc, XPath xpath) {
        String vchEan = null;
        String expression = "//xml/rs:data/z:row/@vchEAN";
        try {

            XPathExpression expr =
                    xpath.compile(expression);
            vchEan = (String) expr.evaluate(doc, XPathConstants.STRING);
        } catch (XPathExpressionException e) {
            e.printStackTrace();
        }
        
        System.out.println("vchEan: " + vchEan);
        return vchEan;
    }



}
